/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        HRML: HRML {
            compatible = "zmk,behavior-hold-tap";
            label = "HRML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
        };

        HRMR: HRMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HRMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | ESC   |
            // | BSPC |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '    |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | LCTRL |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q             &kp W              &kp F               &kp P                 &kp B        &kp J    &kp L                  &kp U                &kp Y              &kp SEMI           &kp BACKSLASH
&kp BSPC   &HRML LEFT_GUI A  &HRML RIGHT_ALT R  &HRML LEFT_SHIFT S  &HRML LEFT_CONTROL T  &kp G        &kp M    &HRMR RIGHT_CONTROL N  &HRMR RIGHT_SHIFT E  &HRMR RIGHT_ALT I  &HRMR RIGHT_GUI O  &kp SQT
&kp LSHFT  &kp Z             &kp X              &kp C               &kp D                 &kp V        &kp K    &kp H                  &kp COMMA            &kp DOT            &kp FSLH           &mt K_NEXT K_PLAY_PAUSE
                                                &kp ESCAPE          &mo 1                 &kp SPACE    &kp RET  &mo 2                  &kp ESCAPE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT     |

            bindings = <
&kp TAB         &kp PLUS      &kp N7        &kp N8        &kp N9        &kp KP_DIVIDE    &msc SCRL_UP    &mmv MOVE_LEFT  &mmv MOVE_UP    &mmv MOVE_RIGHT  &kp K_VOLUME_UP    &none
&kp LEFT_SHIFT  &kp NUMBER_0  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp EQUAL        &none           &kp LEFT        &kp DOWN        &kp UP           &kp RIGHT          &kp K_MUTE
&kp LSHFT       &kp MINUS     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans           &msc SCRL_DOWN  &none           &mmv MOVE_DOWN  &none            &kp K_VOLUME_DOWN  &kp K_PREVIOUS
                                            &kp LGUI      &trans        &kp SPACE        &kp RET         &mo 2           &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL           &kp AT           &kp HASH               &kp DLLR   &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR       &kp RPAR   &kp BSPC
&kp LCTRL  &kp LEFT_BRACKET   &kp LEFT_BRACE   &kp LEFT_PARENTHESIS   &kp MINUS  &none        &none      &kp EQUAL  &kp GRAVE  &kp BACKSLASH  &kp MINUS  &none
&kp LSHFT  &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp UNDER  &none        &none      &kp PLUS   &kp TILDE  &kp PIPE       &kp UNDER  &none
                                               &kp LGUI               &mo 3      &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&none        &bt BT_PRV  &bt BT_CLR  &bt BT_NXT  &none   &none        &none      &none   &none   &none   &none  &none
&sys_reset   &none       &none       &none       &none   &soft_off    &soft_off  &kp F4  &none   &none   &none  &sys_reset
&bootloader  &none       &none       &none       &none   &none        &none      &kp F1  &kp F2  &kp F3  &none  &bootloader
                                     &none       &trans  &none        &none      &none   &none
            >;
        };
    };
};
