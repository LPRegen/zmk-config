/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        HRML: HRML {
            compatible = "zmk,behavior-hold-tap";
            label = "HRML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <14 13 15 16 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            quick-tap-ms = <140>;
        };

        custom_escape: custom_escape {
            compatible = "zmk,behavior-tap-dance";
            label = "CUSTOM_ESCAPE";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&kp ESCAPE>;

            tapping-term-ms = <180>;
        };

        btd_ule: btd_ule {
            compatible = "zmk,behavior-tap-dance";
            label = "BTD_ULE";
            #binding-cells = <0>;
            bindings = <&kp A>, <&umlaut>;

            tapping-term-ms = <180>;
        };
    };

    combos { compatible = "zmk,combos"; };

    macros {
        umlaut: umlaut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LSHFT>,
                <&macro_tap>,
                <&kp U>,
                <&macro_release>,
                <&kp LCTRL &kp LSHFT>,
                <&macro_tap>,
                <&kp N0 &kp N0 &kp E &kp N4 &kp SPC>;

            label = "UMLAUT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | ESC   |
            // | BSPC |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '    |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | LCTRL |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&custom_escape  &kp Q     &kp W  &kp F             &kp P  &kp B        &kp J    &kp L             &kp U      &kp Y    &kp SEMI  &kp BACKSLASH
&kp BSPC        &btd_ule  &kp R  &HRML LEFT_GUI S  &kp T  &kp G        &kp M    &kp N             &kp E      &kp I    &kp O     &kp SQT
&kp LSHFT       &kp Z     &kp X  &kp C             &kp D  &kp V        &kp K    &kp H             &kp COMMA  &kp DOT  &kp FSLH  &mt K_NEXT K_PLAY_PAUSE
                                 &kp LEFT_GUI      &mo 1  &kp SPACE    &kp RET  &kp LEFT_CONTROL  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT     |

            bindings = <
&kp TAB    &trans        &kp N7        &kp N8        &kp N9        &kp PLUS     &trans                &kp LEFT_BRACKET   &kp LEFT_BRACE   &kp MINUS  &kp K_VOLUME_UP    &kp BSPC
&trans     &kp NUMBER_0  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp EQUAL    &kp LEFT_PARENTHESIS  &kp LEFT           &kp DOWN         &kp UP     &kp RIGHT          &kp RIGHT_PARENTHESIS
&kp LSHFT  &trans        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans       &trans                &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp UNDER  &kp K_VOLUME_DOWN  &kp K_PREVIOUS
                                       &kp LGUI      &trans        &kp SPACE    &kp RET               &mo 2              &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };
    };
};
